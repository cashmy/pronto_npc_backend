# Generated by Django 5.2 on 2025-04-28 22:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('archetype', '0001_initial'),
        ('character_group', '0001_initial'),
        ('character_sub_group', '0001_initial'),
        ('npc_system', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text='The first name.', max_length=100)),
                ('last_name', models.CharField(help_text='The last name.', max_length=100)),
                ('alias', models.CharField(blank=True, help_text='An optional alias or knick name for the character.', max_length=100, null=True)),
                ('age_category_description', models.CharField(blank=True, help_text="An optional description of the character's age category.", max_length=100, null=True)),
                ('age', models.IntegerField(blank=True, help_text='The age of the character.', null=True)),
                ('race', models.CharField(blank=True, help_text='The race of the character.', max_length=100, null=True)),
                ('gender', models.CharField(blank=True, help_text='The gender of the character.', max_length=10, null=True)),
                ('current_location', models.CharField(blank=True, help_text='The current location of the character.', max_length=100, null=True)),
                ('description', models.TextField(blank=True, help_text='An optional description providing more details about the character.', null=True)),
                ('notes', models.TextField(blank=True, help_text='Any additional notes about the character.', null=True)),
                ('bulk_generated', models.BooleanField(default=False, help_text='Indicates if the character was bulk-generated.')),
                ('reviewed', models.BooleanField(default=False, help_text='Indicates if the character has been reviewed.')),
                ('ai_integration_exists', models.BooleanField(default=False, help_text='Indicates if AI integration exists for this character.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('archetype', models.ForeignKey(blank=True, help_text='The archetype this character represents.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='characters', to='archetype.archetype')),
                ('character_group', models.ForeignKey(help_text='The character group this character belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='characters', to='character_group.charactergroup')),
                ('character_sub_group', models.ForeignKey(help_text='The character sub-group this character belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='characters', to='character_sub_group.charactersubgroup')),
                ('npc_system', models.ForeignKey(help_text='The NPC system this character belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='characters', to='npc_system.npcsystem')),
            ],
            options={
                'verbose_name': 'Character',
                'verbose_name_plural': 'Characters',
                'ordering': ['npc_system', 'id'],
            },
        ),
    ]
